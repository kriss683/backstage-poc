---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: Payments-System
spec:
  owner: billing-and-paymentscircle
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: payment-processing-service
  description: Handles payment processing
  annotations:
    github.com/project-slug: ebusiness/payments-service
spec:
  type: service
  lifecycle: experimental
  owner: payments-team
  system: e1-name
  providesApis: [example-grpc-api]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: payment-ui
  description: Handles payment ux
  annotations:
    github.com/project-slug: ebusiness/payments-ui
  tags: [tep-yes]
spec:
  type: service
  lifecycle: experimental
  owner: payments-team
  system: e1-name
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
spec:
  type: grpc
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    syntax = "proto3";

    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }

    message ExampleMessage {
      string example = 1;
    };
